# This docker build sets up the following software
#    GCC, G++, GFortran 10.0 compilers
#    Intel C, C++, and Fortran compilers
#    Intel Advisor (Vectorization)
#    Cachegrind and valgrind
#    OpenMPI and MPICH
#    likwid

# To run the example in docker, do the following

# Download the docker install file for your system

# First soft link the version of the docker builds that you want. The
# default is the VNC build to support graphical user interfaces

   ln -s dockervnc.sh docker_run.sh # dockerbash.sh for simple text-only container
   ln -s Dockerfile.vnc Dockerfile # Dockerfile.Ubuntu18.04 Dockerfile.Ubuntu20.04 Dockerfile.debian

# For the pre-built docker image, run

   ./docker_run.sh

# Alternatively, build an image locally and run it 

   docker build -t chapter3 .

   docker run -it --entrypoint /bin/bash chapter3 # for text-only container

   # vnc container is more complicated
   docker run -d --init --rm \
     --name chapter3 --hostname chapter3 \
     --shm-size 2g \
     -p 6080:6080 -p 5900:5900 -p 2222:22 \
     --env VNCPASS=chapter3 \
     --env RESOLUT=2560x1080 \
     --env HOST_UID= \
     --env DOCKER_LANG=en_US \
     --env DOCKER_TIMEZONE=America/Denver \
     -v $HOME/.ssh:$CONTAINER_HOME/.ssh \
     -v $HOME/.gitconfig:$CONTAINER_HOME/.gitconfig_host \
     -w /home/chapter3/Chapter3 \
     --security-opt seccomp=unconfined --cap-add=SYS_PTRACE \
     chapter3 \
     "startvnc.sh >> $CONTAINER_HOME/.log/vnc.log"

# The paths have been set for the Intel products with the Intel setvars script

  source /opt/intel/oneapi/setvars.sh

# To run the docker image with a graphical user interface (GUI) on Mac OSx

# install XQuartz -- brew cask install xQuartz

# VNC viewers
#  Enhanced TightVNC Viewer package (SSVNC) http://www.karlrunge.com/x11vnc/ssvnc.html
#     http://realvnc.com/download/viewer -- Linux, Mac and Windows
#     http://www.tightvnc.com -- Linux, Mac and Windows
# Linux: vncviewer
# MAC: Command-K in Finder and vnc://localhost:$VNC_PORT or vnc://localhost:$VNC_PORT in the Safari Browser

# Now run the GUI with

# advixe_gui
